{
    "$return_value": {
        "log_settings": {
            "transcription_service": "deepgram",
            "ai_service": "none",
            "hasOpenAI": false,
            "hasAnthropic": false,
            "hasDeepgram": true,
            "hasGoogle": false,
            "hasGroq": false,
            "hasElevenLabs": false,
            "transcription_model": "nova-3-general",
            "advanced_options": false
        },
        "cloud_app": "Google Drive",
        "file_name": "output3.mp3",
        "path": "/tmp/output3.mp3",
        "mime": ".mp3",
        "link": "https://drive.google.com/file/d/14b0lGsieLvq0DBTUasZlOczn7y9lb0l3/view?usp=drivesdk",
        "duration": 490,
        "duration_formatted": "0:08:10",
        "transcript_chunks": [
            {
                "text": "Welcome to the notion formula boot camp we are gonna kick things immediately into high gear and create 2 useful notion formulas in this lesson and every lesson in this course has both a written version and a video version so you can pick whichever you like this audio narration is provided to pace you through the written version in case that's helpful to you but you don't have to use it now you're gonna find a more traditional course intro in the next section but I wanted to start things out here with giving you a quick win now quick wins are crucial to long term successful learning in my opinion by getting your hands really dirty and experiencing quick wins you'll gain motivation and confidence to keep pushing you deeper into learning curve so let's get started here's a page from my notion pokedex and this entry is for articuno which happens to be my favorite pokemon and it's mostly complete but there's just 1 problem what's up with these height and weight values a height of 17 a weight of 554 pretty sure a bird does not weigh that much so what's going on here well these height and weight values are pulled from poke api a resource that has data on every pokemon in existence and the data in poke api is exactly the same as the data in the official pokemon games for technical reasons the pokemon developers decided to store height values in decimeters and weight values in hectograms and if you're us based like me and you don't readily know what these terms mean they're lesser known units in the metric system deci means a tenth while hecto means a hundred so a decimeter is 1 tenth of a meter and a hectogram is a hundred grams or 1 tenth of a kilogram so to make these values more readable let's create 2 notion formulas 1 to convert decimeters to meters and 1 to convert hectograms into kilograms let's go ahead and build the first 1 height decimeters to meters now I've created a template version of my pokedex that you can access and duplicate into your own workspace click that link duplicate the template into your workspace and then navigate to the articuno page next create a new property with the formula property type and call it height parenthesis m parenthesis if you need a refresher on creating database properties by the way you can find 1 in my notion database guide in the formula editor enter the following formula and here's the formula in vocal form format parenthesis prompt parenthesis height parenthesis divided by 10 parenthesis + m like magic you're gonna see this formula return articuno's height in meters 1.7 m congrats you've just written your first notion formula your copy of the pokedex template also contains an entry for charmander so go at that really quick and you're gonna see that your formula is performing the correct calculation for charmander as well this is the beauty of the way that formulas and database properties interact across your database the height m property is written the same however because your formula pulls information from other properties in this case height the return value can be different for each database row by the way you've also just used 6 notion formula principles all in a single 1 line formula the format function type conversion a property reference the division operator a hard coded number and string concatenation now don't worry if you don't know what any of these terms mean just yet I'm gonna explain them all in a minute and by the end of this course you're gonna be very comfortable with all of them for now let's put your brain to work I gave you the formula for height in meters now it's your turn to build a similar formula for weight in kilograms challenge create a weight kilograms formula using what you've learned create the formula for weight in kilograms if you create it correctly you should see value of 55.4 kg for articuno now challenge yourself to write this formula from scratch I will give you 2 small hints to get started first the formula will be extremely similar to the 1 we just built for height and meters and second think about the unit conversion that we're trying to do a hectogram is 100 g while a kilogram our target unit is 1000 g now if you really need the answer you can find it in the course answers page but for the sake of your learning progress would urge you not to look at that answer until you've at least followed the 15 minute rule which I have linked in this lesson the best piece of advice I can give you for both completing this course and learning anything is to embrace the learning curve view yourself as the kind of person who runs headfirst and bursts through the brick wall when it confronts you breaking down the formula as I mentioned earlier you just used 6 different formula principles while creating these 2 formulas these principles among others will be crucial to your foundational understanding of notion formulas and fun fact they will also help you learn to code better if you choose to do that some down the road they certainly helped me understand javascript a lot more quickly now let's break down our height and meters formula and go through each of these principles super quickly for each I'm gonna link to the relevant section in my notion formula reference in case you wanna dig deeper you're gonna see me link to this formula reference a lot throughout this course this is akin to the way that any javascript course worth its salt would at least tell you to go look at the mdn web docs they are the definitive reference for the language and these links are present for thoroughness as I am a detail oriented nerd but if you are intimidated by them feel free to skip them for now we are gonna cover everything important throughout this course and we're gonna do it in an action oriented manner now first here's a plain english summary of what this formula is actually doing first this formula is gonna get the value of the height property now height is a number type property and in articuno's case the value is 17 it then divides this value by 10 returning a numeric value of 1.7 and I'll note that 10 is a hard coded value in the formula so it will always be 10 across all rows in the database by contrast our prop height function will be whatever the height value of each row is the format function then converts this numeric value into a string value and strings are essentially just pieces of text finally the + or addition operator is used to concatenate I e combine the string value with another string in this case space and then m and the final return value of this entire formula is 1.7 ms or meters now let's see how each of the 6 formula pieces I mentioned above come into play here first the format function this is a function that accepts data of any type as its argument and converts that data to a string type conversion notion formulas can work with strings numbers dates and boolean values or true or false values however they can only return data of a single type therefore you often have to convert data types when writing your formulas property reference using the prop function we can bring in the value of any other property in the same database division operator this just divides a number by another number you can also use the divide function but the / character is just so much more convenient hard coded number hard coded is my term for data that you write directly into a formula the opposite of hard coded data would be a property reference string concatenation this basically means combining 2 strings together for example monkey d as 1 string and loofy as another string would return monkey d loofy if you concatenated them together now you can also use the concat function for this but again the + operator is just so much more easy to use and it's much more flexible as well alright let's move on don't worry if some of what we covered here feels confusing the entire. Of this lesson is to number 1 give you a quick win in order to motivate you to push forward but number 2 give you some early exposure to several concepts that will be important later on remember those video games that give your character like all their abilities and weapons and gear in the first level only to then take it all away before you go on to the next 1 this is a classic trick in game design it gives you a taste of what's to come and it also makes each new ability and upgrade feel somewhat familiar when you finally unlock it later in the game and that small amount of familiarity can help you to build mastery much faster so now that we've finished this initial challenge let's move on to the proper course introduction",
                "confidence": 0.99820936,
                "language": "en",
                "language_confidence": 0.99852717,
                "vtt": "WEBVTT\n\nNOTE\nTranscription provided by Deepgram\nRequest Id: 7ff3d1b4-abf2-4bb2-84bb-0a693f8b9262\nCreated: 2025-05-09T19:25:37.561Z\nDuration: 490.104\nChannels: 1\n\n00:00:00.240 --> 00:00:02.320\n<v Speaker 0>Welcome to the notion formula boot camp we\n\n00:00:02.320 --> 00:00:04.720\n<v Speaker 0>are gonna kick things immediately into high gear\n\n00:00:04.720 --> 00:00:07.120\n<v Speaker 0>and create 2 useful notion formulas in this\n\n00:00:07.120 --> 00:00:09.120\n<v Speaker 0>lesson and every lesson in this course has\n\n00:00:09.120 --> 00:00:11.519\n<v Speaker 0>both a written version and a video version\n\n00:00:11.519 --> 00:00:13.120\n<v Speaker 0>so you can pick whichever you like this\n\n00:00:13.120 --> 00:00:16.495\n<v Speaker 0>audio narration is provided to pace you through\n\n00:00:16.495 --> 00:00:18.494\n<v Speaker 0>the written version in case that's helpful to\n\n00:00:18.494 --> 00:00:20.335\n<v Speaker 0>you but you don't have to use it\n\n00:00:20.494 --> 00:00:22.095\n<v Speaker 0>now you're gonna find a more traditional course\n\n00:00:22.095 --> 00:00:23.935\n<v Speaker 0>intro in the next section but I wanted\n\n00:00:23.935 --> 00:00:25.935\n<v Speaker 0>to start things out here with giving you\n\n00:00:25.935 --> 00:00:28.910\n<v Speaker 0>a quick win now quick wins are crucial\n\n00:00:28.910 --> 00:00:31.550\n<v Speaker 0>to long term successful learning in my opinion\n\n00:00:31.630 --> 00:00:33.950\n<v Speaker 0>by getting your hands really dirty and experiencing\n\n00:00:33.950 --> 00:00:37.070\n<v Speaker 0>quick wins you'll gain motivation and confidence to\n\n00:00:37.070 --> 00:00:39.790\n<v Speaker 0>keep pushing you deeper into learning curve so\n\n00:00:39.790 --> 00:00:42.254\n<v Speaker 0>let's get started here's a page from my\n\n00:00:42.254 --> 00:00:44.895\n<v Speaker 0>notion pokedex and this entry is for articuno\n\n00:00:44.895 --> 00:00:47.055\n<v Speaker 0>which happens to be my favorite pokemon and\n\n00:00:47.055 --> 00:00:50.574\n<v Speaker 0>it's mostly complete but there's just 1 problem\n\n00:00:50.655 --> 00:00:52.495\n<v Speaker 0>what's up with these height and weight values\n\n00:00:52.495 --> 00:00:56.870\n<v Speaker 0>a height of 17 a weight of 554\n\n00:00:56.870 --> 00:00:58.550\n<v Speaker 0>pretty sure a bird does not weigh that\n\n00:00:58.550 --> 00:01:00.630\n<v Speaker 0>much so what's going on here well these\n\n00:01:00.630 --> 00:01:02.470\n<v Speaker 0>height and weight values are pulled from poke\n\n00:01:02.470 --> 00:01:04.870\n<v Speaker 0>api a resource that has data on every\n\n00:01:04.870 --> 00:01:07.270\n<v Speaker 0>pokemon in existence and the data in poke\n\n00:01:07.270 --> 00:01:09.190\n<v Speaker 0>api is exactly the same as the data\n\n00:01:09.190 --> 00:01:11.954\n<v Speaker 0>in the official pokemon games for technical reasons\n\n00:01:11.954 --> 00:01:14.435\n<v Speaker 0>the pokemon developers decided to store height values\n\n00:01:14.435 --> 00:01:17.875\n<v Speaker 0>in decimeters and weight values in hectograms and\n\n00:01:17.875 --> 00:01:19.475\n<v Speaker 0>if you're us based like me and you\n\n00:01:19.475 --> 00:01:21.634\n<v Speaker 0>don't readily know what these terms mean they're\n\n00:01:21.634 --> 00:01:24.115\n<v Speaker 0>lesser known units in the metric system deci\n\n00:01:24.115 --> 00:01:27.369\n<v Speaker 0>means a tenth while hecto means a hundred\n\n00:01:27.530 --> 00:01:29.850\n<v Speaker 0>so a decimeter is 1 tenth of a\n\n00:01:29.850 --> 00:01:32.090\n<v Speaker 0>meter and a hectogram is a hundred grams\n\n00:01:32.090 --> 00:01:34.409\n<v Speaker 0>or 1 tenth of a kilogram so to\n\n00:01:34.409 --> 00:01:36.810\n<v Speaker 0>make these values more readable let's create 2\n\n00:01:36.810 --> 00:01:40.490\n<v Speaker 0>notion formulas 1 to convert decimeters to meters\n\n00:01:40.490 --> 00:01:43.585\n<v Speaker 0>and 1 to convert hectograms into kilograms let's\n\n00:01:43.585 --> 00:01:45.585\n<v Speaker 0>go ahead and build the first 1 height\n\n00:01:45.585 --> 00:01:48.545\n<v Speaker 0>decimeters to meters now I've created a template\n\n00:01:48.545 --> 00:01:50.225\n<v Speaker 0>version of my pokedex that you can access\n\n00:01:50.225 --> 00:01:52.705\n<v Speaker 0>and duplicate into your own workspace click that\n\n00:01:52.705 --> 00:01:54.945\n<v Speaker 0>link duplicate the template into your workspace and\n\n00:01:54.945 --> 00:01:58.420\n<v Speaker 0>then navigate to the articuno page next create\n\n00:01:58.420 --> 00:02:00.340\n<v Speaker 0>a new property with the formula property type\n\n00:02:00.340 --> 00:02:03.539\n<v Speaker 0>and call it height parenthesis m parenthesis if\n\n00:02:03.539 --> 00:02:05.380\n<v Speaker 0>you need a refresher on creating database properties\n\n00:02:05.380 --> 00:02:06.659\n<v Speaker 0>by the way you can find 1 in\n\n00:02:06.659 --> 00:02:09.474\n<v Speaker 0>my notion database guide in the formula editor\n\n00:02:09.474 --> 00:02:11.955\n<v Speaker 0>enter the following formula and here's the formula\n\n00:02:11.955 --> 00:02:16.835\n<v Speaker 0>in vocal form format parenthesis prompt parenthesis height\n\n00:02:16.915 --> 00:02:21.940\n<v Speaker 0>parenthesis divided by 10 parenthesis + m like\n\n00:02:21.940 --> 00:02:24.100\n<v Speaker 0>magic you're gonna see this formula return articuno's\n\n00:02:24.100 --> 00:02:27.940\n<v Speaker 0>height in meters 1.7 m congrats you've just\n\n00:02:27.940 --> 00:02:30.420\n<v Speaker 0>written your first notion formula your copy of\n\n00:02:30.420 --> 00:02:32.580\n<v Speaker 0>the pokedex template also contains an entry for\n\n00:02:32.580 --> 00:02:34.755\n<v Speaker 0>charmander so go at that really quick and\n\n00:02:34.755 --> 00:02:36.515\n<v Speaker 0>you're gonna see that your formula is performing\n\n00:02:36.515 --> 00:02:39.875\n<v Speaker 0>the correct calculation for charmander as well this\n\n00:02:39.875 --> 00:02:41.795\n<v Speaker 0>is the beauty of the way that formulas\n\n00:02:41.795 --> 00:02:45.635\n<v Speaker 0>and database properties interact across your database the\n\n00:02:45.635 --> 00:02:48.595\n<v Speaker 0>height m property is written the same however\n\n00:02:48.595 --> 00:02:51.780\n<v Speaker 0>because your formula pulls information from other properties\n\n00:02:51.780 --> 00:02:54.659\n<v Speaker 0>in this case height the return value can\n\n00:02:54.659 --> 00:02:57.220\n<v Speaker 0>be different for each database row by the\n\n00:02:57.220 --> 00:02:59.940\n<v Speaker 0>way you've also just used 6 notion formula\n\n00:02:59.940 --> 00:03:03.235\n<v Speaker 0>principles all in a single 1 line formula\n\n00:03:03.314 --> 00:03:07.395\n<v Speaker 0>the format function type conversion a property reference\n\n00:03:07.555 --> 00:03:10.995\n<v Speaker 0>the division operator a hard coded number and\n\n00:03:10.995 --> 00:03:13.954\n<v Speaker 0>string concatenation now don't worry if you don't\n\n00:03:13.954 --> 00:03:15.680\n<v Speaker 0>know what any of these terms mean just\n\n00:03:15.680 --> 00:03:17.280\n<v Speaker 0>yet I'm gonna explain them all in a\n\n00:03:17.280 --> 00:03:19.200\n<v Speaker 0>minute and by the end of this course\n\n00:03:19.200 --> 00:03:21.120\n<v Speaker 0>you're gonna be very comfortable with all of\n\n00:03:21.120 --> 00:03:23.440\n<v Speaker 0>them for now let's put your brain to\n\n00:03:23.440 --> 00:03:25.680\n<v Speaker 0>work I gave you the formula for height\n\n00:03:25.680 --> 00:03:27.625\n<v Speaker 0>in meters now it's your turn to build\n\n00:03:27.625 --> 00:03:31.865\n<v Speaker 0>a similar formula for weight in kilograms challenge\n\n00:03:31.865 --> 00:03:35.225\n<v Speaker 0>create a weight kilograms formula using what you've\n\n00:03:35.225 --> 00:03:37.785\n<v Speaker 0>learned create the formula for weight in kilograms\n\n00:03:37.785 --> 00:03:40.185\n<v Speaker 0>if you create it correctly you should see\n\n00:03:39.690 --> 00:03:43.690\n<v Speaker 0>value of 55.4 kg for articuno now challenge\n\n00:03:43.690 --> 00:03:46.090\n<v Speaker 0>yourself to write this formula from scratch I\n\n00:03:46.090 --> 00:03:47.690\n<v Speaker 0>will give you 2 small hints to get\n\n00:03:47.690 --> 00:03:51.050\n<v Speaker 0>started first the formula will be extremely similar\n\n00:03:51.050 --> 00:03:52.970\n<v Speaker 0>to the 1 we just built for height\n\n00:03:52.425 --> 00:03:55.465\n<v Speaker 0>and meters and second think about the unit\n\n00:03:55.465 --> 00:03:58.585\n<v Speaker 0>conversion that we're trying to do a hectogram\n\n00:03:58.585 --> 00:04:02.265\n<v Speaker 0>is 100 g while a kilogram our target\n\n00:04:02.265 --> 00:04:05.720\n<v Speaker 0>unit is 1000 g now if you really\n\n00:04:05.720 --> 00:04:07.240\n<v Speaker 0>need the answer you can find it in\n\n00:04:07.240 --> 00:04:09.720\n<v Speaker 0>the course answers page but for the sake\n\n00:04:09.720 --> 00:04:11.640\n<v Speaker 0>of your learning progress would urge you not\n\n00:04:11.640 --> 00:04:13.320\n<v Speaker 0>to look at that answer until you've at\n\n00:04:13.320 --> 00:04:15.800\n<v Speaker 0>least followed the 15 minute rule which I\n\n00:04:15.800 --> 00:04:18.279\n<v Speaker 0>have linked in this lesson the best piece\n\n00:04:18.279 --> 00:04:19.480\n<v Speaker 0>of advice I can give you for both\n\n00:04:19.480 --> 00:04:22.345\n<v Speaker 0>completing this course and learning anything is to\n\n00:04:22.345 --> 00:04:25.545\n<v Speaker 0>embrace the learning curve view yourself as the\n\n00:04:25.545 --> 00:04:28.185\n<v Speaker 0>kind of person who runs headfirst and bursts\n\n00:04:28.185 --> 00:04:30.345\n<v Speaker 0>through the brick wall when it confronts you\n\n00:04:30.585 --> 00:04:32.825\n<v Speaker 0>breaking down the formula as I mentioned earlier\n\n00:04:32.990 --> 00:04:35.710\n<v Speaker 0>you just used 6 different formula principles while\n\n00:04:35.710 --> 00:04:38.910\n<v Speaker 0>creating these 2 formulas these principles among others\n\n00:04:38.910 --> 00:04:41.630\n<v Speaker 0>will be crucial to your foundational understanding of\n\n00:04:41.630 --> 00:04:44.270\n<v Speaker 0>notion formulas and fun fact they will also\n\n00:04:44.270 --> 00:04:46.190\n<v Speaker 0>help you learn to code better if you\n\n00:04:46.190 --> 00:04:48.104\n<v Speaker 0>choose to do that some down the road\n\n00:04:48.104 --> 00:04:50.745\n<v Speaker 0>they certainly helped me understand javascript a lot\n\n00:04:50.745 --> 00:04:52.745\n<v Speaker 0>more quickly now let's break down our height\n\n00:04:52.745 --> 00:04:54.585\n<v Speaker 0>and meters formula and go through each of\n\n00:04:54.585 --> 00:04:57.145\n<v Speaker 0>these principles super quickly for each I'm gonna\n\n00:04:57.145 --> 00:04:58.985\n<v Speaker 0>link to the relevant section in my notion\n\n00:04:58.985 --> 00:05:01.100\n<v Speaker 0>formula reference in case you wanna dig deeper\n\n00:05:01.100 --> 00:05:02.460\n<v Speaker 0>you're gonna see me link to this formula\n\n00:05:02.460 --> 00:05:05.100\n<v Speaker 0>reference a lot throughout this course this is\n\n00:05:05.100 --> 00:05:07.100\n<v Speaker 0>akin to the way that any javascript course\n\n00:05:07.100 --> 00:05:08.780\n<v Speaker 0>worth its salt would at least tell you\n\n00:05:08.780 --> 00:05:11.420\n<v Speaker 0>to go look at the mdn web docs\n\n00:05:11.420 --> 00:05:14.105\n<v Speaker 0>they are the definitive reference for the language\n\n00:05:14.265 --> 00:05:16.265\n<v Speaker 0>and these links are present for thoroughness as\n\n00:05:16.265 --> 00:05:18.905\n<v Speaker 0>I am a detail oriented nerd but if\n\n00:05:18.905 --> 00:05:20.985\n<v Speaker 0>you are intimidated by them feel free to\n\n00:05:20.985 --> 00:05:22.665\n<v Speaker 0>skip them for now we are gonna cover\n\n00:05:22.665 --> 00:05:25.145\n<v Speaker 0>everything important throughout this course and we're gonna\n\n00:05:25.145 --> 00:05:27.460\n<v Speaker 0>do it in an action oriented manner now\n\n00:05:27.460 --> 00:05:29.620\n<v Speaker 0>first here's a plain english summary of what\n\n00:05:29.620 --> 00:05:32.500\n<v Speaker 0>this formula is actually doing first this formula\n\n00:05:32.500 --> 00:05:34.419\n<v Speaker 0>is gonna get the value of the height\n\n00:05:34.419 --> 00:05:36.580\n<v Speaker 0>property now height is a number type property\n\n00:05:36.580 --> 00:05:39.220\n<v Speaker 0>and in articuno's case the value is 17\n\n00:05:39.540 --> 00:05:42.075\n<v Speaker 0>it then divides this value by 10 returning\n\n00:05:42.075 --> 00:05:44.875\n<v Speaker 0>a numeric value of 1.7 and I'll note\n\n00:05:44.875 --> 00:05:47.355\n<v Speaker 0>that 10 is a hard coded value in\n\n00:05:47.355 --> 00:05:49.115\n<v Speaker 0>the formula so it will always be 10\n\n00:05:49.115 --> 00:05:52.555\n<v Speaker 0>across all rows in the database by contrast\n\n00:05:52.555 --> 00:05:55.195\n<v Speaker 0>our prop height function will be whatever the\n\n00:05:55.195 --> 00:05:57.970\n<v Speaker 0>height value of each row is the format\n\n00:05:57.970 --> 00:06:00.930\n<v Speaker 0>function then converts this numeric value into a\n\n00:06:00.930 --> 00:06:03.569\n<v Speaker 0>string value and strings are essentially just pieces\n\n00:06:03.569 --> 00:06:06.530\n<v Speaker 0>of text finally the + or addition operator\n\n00:06:06.530 --> 00:06:09.810\n<v Speaker 0>is used to concatenate I e combine the\n\n00:06:09.810 --> 00:06:13.569\n<v Speaker 0>string value with another string in this case\n\n00:06:12.645 --> 00:06:14.965\n<v Speaker 0>space and then m and the final return\n\n00:06:14.965 --> 00:06:18.164\n<v Speaker 0>value of this entire formula is 1.7 ms\n\n00:06:18.164 --> 00:06:20.405\n<v Speaker 0>or meters now let's see how each of\n\n00:06:20.405 --> 00:06:22.405\n<v Speaker 0>the 6 formula pieces I mentioned above come\n\n00:06:22.405 --> 00:06:25.444\n<v Speaker 0>into play here first the format function this\n\n00:06:25.444 --> 00:06:27.340\n<v Speaker 0>is a function that accepts data of any\n\n00:06:27.340 --> 00:06:29.740\n<v Speaker 0>type as its argument and converts that data\n\n00:06:29.740 --> 00:06:33.020\n<v Speaker 0>to a string type conversion notion formulas can\n\n00:06:33.020 --> 00:06:36.300\n<v Speaker 0>work with strings numbers dates and boolean values\n\n00:06:36.300 --> 00:06:38.860\n<v Speaker 0>or true or false values however they can\n\n00:06:38.860 --> 00:06:41.354\n<v Speaker 0>only return data of a single type therefore\n\n00:06:41.354 --> 00:06:43.595\n<v Speaker 0>you often have to convert data types when\n\n00:06:43.595 --> 00:06:47.115\n<v Speaker 0>writing your formulas property reference using the prop\n\n00:06:47.115 --> 00:06:48.715\n<v Speaker 0>function we can bring in the value of\n\n00:06:48.715 --> 00:06:51.919\n<v Speaker 0>any other property in the same database division\n\n00:06:51.919 --> 00:06:54.400\n<v Speaker 0>operator this just divides a number by another\n\n00:06:54.400 --> 00:06:57.280\n<v Speaker 0>number you can also use the divide function\n\n00:06:57.280 --> 00:06:59.360\n<v Speaker 0>but the / character is just so much\n\n00:06:59.360 --> 00:07:02.720\n<v Speaker 0>more convenient hard coded number hard coded is\n\n00:07:02.720 --> 00:07:04.720\n<v Speaker 0>my term for data that you write directly\n\n00:07:04.720 --> 00:07:07.199\n<v Speaker 0>into a formula the opposite of hard coded\n\n00:07:06.965 --> 00:07:10.645\n<v Speaker 0>data would be a property reference string concatenation\n\n00:07:11.205 --> 00:07:13.845\n<v Speaker 0>this basically means combining 2 strings together for\n\n00:07:13.845 --> 00:07:16.885\n<v Speaker 0>example monkey d as 1 string and loofy\n\n00:07:16.885 --> 00:07:19.525\n<v Speaker 0>as another string would return monkey d loofy\n\n00:07:19.525 --> 00:07:21.800\n<v Speaker 0>if you concatenated them together now you can\n\n00:07:21.800 --> 00:07:23.720\n<v Speaker 0>also use the concat function for this but\n\n00:07:23.720 --> 00:07:25.800\n<v Speaker 0>again the + operator is just so much\n\n00:07:25.800 --> 00:07:27.560\n<v Speaker 0>more easy to use and it's much more\n\n00:07:27.560 --> 00:07:30.360\n<v Speaker 0>flexible as well alright let's move on don't\n\n00:07:30.360 --> 00:07:31.479\n<v Speaker 0>worry if some of what we covered here\n\n00:07:31.479 --> 00:07:35.479\n<v Speaker 0>feels confusing the entire. Of this lesson is\n\n00:07:34.155 --> 00:07:36.315\n<v Speaker 0>to number 1 give you a quick win\n\n00:07:36.315 --> 00:07:38.235\n<v Speaker 0>in order to motivate you to push forward\n\n00:07:38.235 --> 00:07:40.795\n<v Speaker 0>but number 2 give you some early exposure\n\n00:07:40.795 --> 00:07:43.115\n<v Speaker 0>to several concepts that will be important later\n\n00:07:43.115 --> 00:07:45.275\n<v Speaker 0>on remember those video games that give your\n\n00:07:45.275 --> 00:07:47.915\n<v Speaker 0>character like all their abilities and weapons and\n\n00:07:47.915 --> 00:07:49.909\n<v Speaker 0>gear in the first level only to then\n\n00:07:49.909 --> 00:07:51.189\n<v Speaker 0>take it all away before you go on\n\n00:07:51.189 --> 00:07:53.030\n<v Speaker 0>to the next 1 this is a classic\n\n00:07:53.030 --> 00:07:54.469\n<v Speaker 0>trick in game design it gives you a\n\n00:07:54.469 --> 00:07:56.229\n<v Speaker 0>taste of what's to come and it also\n\n00:07:56.229 --> 00:07:58.949\n<v Speaker 0>makes each new ability and upgrade feel somewhat\n\n00:07:58.949 --> 00:08:01.038\n<v Speaker 0>familiar when you finally unlock it later in\n\n00:08:01.038 --> 00:08:03.038\n<v Speaker 0>the game and that small amount of familiarity\n\n00:08:03.038 --> 00:08:05.438\n<v Speaker 0>can help you to build mastery much faster\n\n00:08:05.518 --> 00:08:07.758\n<v Speaker 0>so now that we've finished this initial challenge\n\n00:08:07.758 --> 00:08:09.678\n<v Speaker 0>let's move on to the proper course introduction\n",
                "speakers": 0,
                "metadata": {
                    "transaction_key": "deprecated",
                    "request_id": "7ff3d1b4-abf2-4bb2-84bb-0a693f8b9262",
                    "sha256": "1cd538f4639720488763955f8e338a38d664b36f051c9822cdc009cbc73ab13a",
                    "created": "2025-05-09T19:25:37.561Z",
                    "duration": 490.104,
                    "channels": 1,
                    "models": [
                        "3b3aabe4-608a-46ac-9585-7960a25daf1a"
                    ],
                    "model_info": {
                        "3b3aabe4-608a-46ac-9585-7960a25daf1a": {
                            "name": "general-nova-3",
                            "version": "2024-12-20.0",
                            "arch": "nova-3"
                        }
                    },
                    "model": "nova-3-general"
                }
            }
        ],
        "full_transcript": "Welcome to the notion formula boot camp we are gonna kick things immediately into high gear and create 2 useful notion formulas in this lesson and every lesson in this course has both a written version and a video version so you can pick whichever you like this audio narration is provided to pace you through the written version in case that's helpful to you but you don't have to use it now you're gonna find a more traditional course intro in the next section but I wanted to start things out here with giving you a quick win now quick wins are crucial to long term successful learning in my opinion by getting your hands really dirty and experiencing quick wins you'll gain motivation and confidence to keep pushing you deeper into learning curve so let's get started here's a page from my notion pokedex and this entry is for articuno which happens to be my favorite pokemon and it's mostly complete but there's just 1 problem what's up with these height and weight values a height of 17 a weight of 554 pretty sure a bird does not weigh that much so what's going on here well these height and weight values are pulled from poke api a resource that has data on every pokemon in existence and the data in poke api is exactly the same as the data in the official pokemon games for technical reasons the pokemon developers decided to store height values in decimeters and weight values in hectograms and if you're us based like me and you don't readily know what these terms mean they're lesser known units in the metric system deci means a tenth while hecto means a hundred so a decimeter is 1 tenth of a meter and a hectogram is a hundred grams or 1 tenth of a kilogram so to make these values more readable let's create 2 notion formulas 1 to convert decimeters to meters and 1 to convert hectograms into kilograms let's go ahead and build the first 1 height decimeters to meters now I've created a template version of my pokedex that you can access and duplicate into your own workspace click that link duplicate the template into your workspace and then navigate to the articuno page next create a new property with the formula property type and call it height parenthesis m parenthesis if you need a refresher on creating database properties by the way you can find 1 in my notion database guide in the formula editor enter the following formula and here's the formula in vocal form format parenthesis prompt parenthesis height parenthesis divided by 10 parenthesis + m like magic you're gonna see this formula return articuno's height in meters 1.7 m congrats you've just written your first notion formula your copy of the pokedex template also contains an entry for charmander so go at that really quick and you're gonna see that your formula is performing the correct calculation for charmander as well this is the beauty of the way that formulas and database properties interact across your database the height m property is written the same however because your formula pulls information from other properties in this case height the return value can be different for each database row by the way you've also just used 6 notion formula principles all in a single 1 line formula the format function type conversion a property reference the division operator a hard coded number and string concatenation now don't worry if you don't know what any of these terms mean just yet I'm gonna explain them all in a minute and by the end of this course you're gonna be very comfortable with all of them for now let's put your brain to work I gave you the formula for height in meters now it's your turn to build a similar formula for weight in kilograms challenge create a weight kilograms formula using what you've learned create the formula for weight in kilograms if you create it correctly you should see value of 55.4 kg for articuno now challenge yourself to write this formula from scratch I will give you 2 small hints to get started first the formula will be extremely similar to the 1 we just built for height and meters and second think about the unit conversion that we're trying to do a hectogram is 100 g while a kilogram our target unit is 1000 g now if you really need the answer you can find it in the course answers page but for the sake of your learning progress would urge you not to look at that answer until you've at least followed the 15 minute rule which I have linked in this lesson the best piece of advice I can give you for both completing this course and learning anything is to embrace the learning curve view yourself as the kind of person who runs headfirst and bursts through the brick wall when it confronts you breaking down the formula as I mentioned earlier you just used 6 different formula principles while creating these 2 formulas these principles among others will be crucial to your foundational understanding of notion formulas and fun fact they will also help you learn to code better if you choose to do that some down the road they certainly helped me understand javascript a lot more quickly now let's break down our height and meters formula and go through each of these principles super quickly for each I'm gonna link to the relevant section in my notion formula reference in case you wanna dig deeper you're gonna see me link to this formula reference a lot throughout this course this is akin to the way that any javascript course worth its salt would at least tell you to go look at the mdn web docs they are the definitive reference for the language and these links are present for thoroughness as I am a detail oriented nerd but if you are intimidated by them feel free to skip them for now we are gonna cover everything important throughout this course and we're gonna do it in an action oriented manner now first here's a plain english summary of what this formula is actually doing first this formula is gonna get the value of the height property now height is a number type property and in articuno's case the value is 17 it then divides this value by 10 returning a numeric value of 1.7 and I'll note that 10 is a hard coded value in the formula so it will always be 10 across all rows in the database by contrast our prop height function will be whatever the height value of each row is the format function then converts this numeric value into a string value and strings are essentially just pieces of text finally the + or addition operator is used to concatenate I e combine the string value with another string in this case space and then m and the final return value of this entire formula is 1.7 ms or meters now let's see how each of the 6 formula pieces I mentioned above come into play here first the format function this is a function that accepts data of any type as its argument and converts that data to a string type conversion notion formulas can work with strings numbers dates and boolean values or true or false values however they can only return data of a single type therefore you often have to convert data types when writing your formulas property reference using the prop function we can bring in the value of any other property in the same database division operator this just divides a number by another number you can also use the divide function but the / character is just so much more convenient hard coded number hard coded is my term for data that you write directly into a formula the opposite of hard coded data would be a property reference string concatenation this basically means combining 2 strings together for example monkey d as 1 string and loofy as another string would return monkey d loofy if you concatenated them together now you can also use the concat function for this but again the + operator is just so much more easy to use and it's much more flexible as well alright let's move on don't worry if some of what we covered here feels confusing the entire. Of this lesson is to number 1 give you a quick win in order to motivate you to push forward but number 2 give you some early exposure to several concepts that will be important later on remember those video games that give your character like all their abilities and weapons and gear in the first level only to then take it all away before you go on to the next 1 this is a classic trick in game design it gives you a taste of what's to come and it also makes each new ability and upgrade feel somewhat familiar when you finally unlock it later in the game and that small amount of familiarity can help you to build mastery much faster so now that we've finished this initial challenge let's move on to the proper course introduction",
        "full_vtt": "WEBVTT\n\n1\nTranscription provided by Deepgram\nRequest Id: 7ff3d1b4-abf2-4bb2-84bb-0a693f8b9262\nCreated: 2025-05-09T19:25:37.561Z\nDuration: 490.104\nChannels: 1\n00:00:00.240 --> 00:00:02.320\n<v Speaker 0>Welcome to the notion formula boot camp we\n00:00:02.320 --> 00:00:04.720\n<v Speaker 0>are gonna kick things immediately into high gear\n00:00:04.720 --> 00:00:07.120\n<v Speaker 0>and create 2 useful notion formulas in this\n00:00:07.120 --> 00:00:09.120\n<v Speaker 0>lesson and every lesson in this course has\n00:00:09.120 --> 00:00:11.519\n<v Speaker 0>both a written version and a video version\n00:00:11.519 --> 00:00:13.120\n<v Speaker 0>so you can pick whichever you like this\n00:00:13.120 --> 00:00:16.495\n<v Speaker 0>audio narration is provided to pace you through\n00:00:16.495 --> 00:00:18.494\n<v Speaker 0>the written version in case that's helpful to\n00:00:18.494 --> 00:00:20.335\n<v Speaker 0>you but you don't have to use it\n00:00:20.494 --> 00:00:22.095\n<v Speaker 0>now you're gonna find a more traditional course\n00:00:22.095 --> 00:00:23.935\n<v Speaker 0>intro in the next section but I wanted\n00:00:23.935 --> 00:00:25.935\n<v Speaker 0>to start things out here with giving you\n00:00:25.935 --> 00:00:28.910\n<v Speaker 0>a quick win now quick wins are crucial\n00:00:28.910 --> 00:00:31.550\n<v Speaker 0>to long term successful learning in my opinion\n00:00:31.630 --> 00:00:33.950\n<v Speaker 0>by getting your hands really dirty and experiencing\n00:00:33.950 --> 00:00:37.070\n<v Speaker 0>quick wins you'll gain motivation and confidence to\n00:00:37.070 --> 00:00:39.790\n<v Speaker 0>keep pushing you deeper into learning curve so\n00:00:39.790 --> 00:00:42.254\n<v Speaker 0>let's get started here's a page from my\n00:00:42.254 --> 00:00:44.895\n<v Speaker 0>notion pokedex and this entry is for articuno\n00:00:44.895 --> 00:00:47.055\n<v Speaker 0>which happens to be my favorite pokemon and\n00:00:47.055 --> 00:00:50.574\n<v Speaker 0>it's mostly complete but there's just 1 problem\n00:00:50.655 --> 00:00:52.495\n<v Speaker 0>what's up with these height and weight values\n00:00:52.495 --> 00:00:56.870\n<v Speaker 0>a height of 17 a weight of 554\n00:00:56.870 --> 00:00:58.550\n<v Speaker 0>pretty sure a bird does not weigh that\n00:00:58.550 --> 00:01:00.630\n<v Speaker 0>much so what's going on here well these\n00:01:00.630 --> 00:01:02.470\n<v Speaker 0>height and weight values are pulled from poke\n00:01:02.470 --> 00:01:04.870\n<v Speaker 0>api a resource that has data on every\n00:01:04.870 --> 00:01:07.270\n<v Speaker 0>pokemon in existence and the data in poke\n00:01:07.270 --> 00:01:09.190\n<v Speaker 0>api is exactly the same as the data\n00:01:09.190 --> 00:01:11.954\n<v Speaker 0>in the official pokemon games for technical reasons\n00:01:11.954 --> 00:01:14.435\n<v Speaker 0>the pokemon developers decided to store height values\n00:01:14.435 --> 00:01:17.875\n<v Speaker 0>in decimeters and weight values in hectograms and\n00:01:17.875 --> 00:01:19.475\n<v Speaker 0>if you're us based like me and you\n00:01:19.475 --> 00:01:21.634\n<v Speaker 0>don't readily know what these terms mean they're\n00:01:21.634 --> 00:01:24.115\n<v Speaker 0>lesser known units in the metric system deci\n00:01:24.115 --> 00:01:27.369\n<v Speaker 0>means a tenth while hecto means a hundred\n00:01:27.530 --> 00:01:29.850\n<v Speaker 0>so a decimeter is 1 tenth of a\n00:01:29.850 --> 00:01:32.090\n<v Speaker 0>meter and a hectogram is a hundred grams\n00:01:32.090 --> 00:01:34.409\n<v Speaker 0>or 1 tenth of a kilogram so to\n00:01:34.409 --> 00:01:36.810\n<v Speaker 0>make these values more readable let's create 2\n00:01:36.810 --> 00:01:40.490\n<v Speaker 0>notion formulas 1 to convert decimeters to meters\n00:01:40.490 --> 00:01:43.585\n<v Speaker 0>and 1 to convert hectograms into kilograms let's\n00:01:43.585 --> 00:01:45.585\n<v Speaker 0>go ahead and build the first 1 height\n00:01:45.585 --> 00:01:48.545\n<v Speaker 0>decimeters to meters now I've created a template\n00:01:48.545 --> 00:01:50.225\n<v Speaker 0>version of my pokedex that you can access\n00:01:50.225 --> 00:01:52.705\n<v Speaker 0>and duplicate into your own workspace click that\n00:01:52.705 --> 00:01:54.945\n<v Speaker 0>link duplicate the template into your workspace and\n00:01:54.945 --> 00:01:58.420\n<v Speaker 0>then navigate to the articuno page next create\n00:01:58.420 --> 00:02:00.340\n<v Speaker 0>a new property with the formula property type\n00:02:00.340 --> 00:02:03.539\n<v Speaker 0>and call it height parenthesis m parenthesis if\n00:02:03.539 --> 00:02:05.380\n<v Speaker 0>you need a refresher on creating database properties\n00:02:05.380 --> 00:02:06.659\n<v Speaker 0>by the way you can find 1 in\n00:02:06.659 --> 00:02:09.474\n<v Speaker 0>my notion database guide in the formula editor\n00:02:09.474 --> 00:02:11.955\n<v Speaker 0>enter the following formula and here's the formula\n00:02:11.955 --> 00:02:16.835\n<v Speaker 0>in vocal form format parenthesis prompt parenthesis height\n00:02:16.915 --> 00:02:21.940\n<v Speaker 0>parenthesis divided by 10 parenthesis + m like\n00:02:21.940 --> 00:02:24.100\n<v Speaker 0>magic you're gonna see this formula return articuno's\n00:02:24.100 --> 00:02:27.940\n<v Speaker 0>height in meters 1.7 m congrats you've just\n00:02:27.940 --> 00:02:30.420\n<v Speaker 0>written your first notion formula your copy of\n00:02:30.420 --> 00:02:32.580\n<v Speaker 0>the pokedex template also contains an entry for\n00:02:32.580 --> 00:02:34.755\n<v Speaker 0>charmander so go at that really quick and\n00:02:34.755 --> 00:02:36.515\n<v Speaker 0>you're gonna see that your formula is performing\n00:02:36.515 --> 00:02:39.875\n<v Speaker 0>the correct calculation for charmander as well this\n00:02:39.875 --> 00:02:41.795\n<v Speaker 0>is the beauty of the way that formulas\n00:02:41.795 --> 00:02:45.635\n<v Speaker 0>and database properties interact across your database the\n00:02:45.635 --> 00:02:48.595\n<v Speaker 0>height m property is written the same however\n00:02:48.595 --> 00:02:51.780\n<v Speaker 0>because your formula pulls information from other properties\n00:02:51.780 --> 00:02:54.659\n<v Speaker 0>in this case height the return value can\n00:02:54.659 --> 00:02:57.220\n<v Speaker 0>be different for each database row by the\n00:02:57.220 --> 00:02:59.940\n<v Speaker 0>way you've also just used 6 notion formula\n00:02:59.940 --> 00:03:03.235\n<v Speaker 0>principles all in a single 1 line formula\n00:03:03.314 --> 00:03:07.395\n<v Speaker 0>the format function type conversion a property reference\n00:03:07.555 --> 00:03:10.995\n<v Speaker 0>the division operator a hard coded number and\n00:03:10.995 --> 00:03:13.954\n<v Speaker 0>string concatenation now don't worry if you don't\n00:03:13.954 --> 00:03:15.680\n<v Speaker 0>know what any of these terms mean just\n00:03:15.680 --> 00:03:17.280\n<v Speaker 0>yet I'm gonna explain them all in a\n00:03:17.280 --> 00:03:19.200\n<v Speaker 0>minute and by the end of this course\n00:03:19.200 --> 00:03:21.120\n<v Speaker 0>you're gonna be very comfortable with all of\n00:03:21.120 --> 00:03:23.440\n<v Speaker 0>them for now let's put your brain to\n00:03:23.440 --> 00:03:25.680\n<v Speaker 0>work I gave you the formula for height\n00:03:25.680 --> 00:03:27.625\n<v Speaker 0>in meters now it's your turn to build\n00:03:27.625 --> 00:03:31.865\n<v Speaker 0>a similar formula for weight in kilograms challenge\n00:03:31.865 --> 00:03:35.225\n<v Speaker 0>create a weight kilograms formula using what you've\n00:03:35.225 --> 00:03:37.785\n<v Speaker 0>learned create the formula for weight in kilograms\n00:03:37.785 --> 00:03:40.185\n<v Speaker 0>if you create it correctly you should see\n00:03:39.690 --> 00:03:43.690\n<v Speaker 0>value of 55.4 kg for articuno now challenge\n00:03:43.690 --> 00:03:46.090\n<v Speaker 0>yourself to write this formula from scratch I\n00:03:46.090 --> 00:03:47.690\n<v Speaker 0>will give you 2 small hints to get\n00:03:47.690 --> 00:03:51.050\n<v Speaker 0>started first the formula will be extremely similar\n00:03:51.050 --> 00:03:52.970\n<v Speaker 0>to the 1 we just built for height\n00:03:52.425 --> 00:03:55.465\n<v Speaker 0>and meters and second think about the unit\n00:03:55.465 --> 00:03:58.585\n<v Speaker 0>conversion that we're trying to do a hectogram\n00:03:58.585 --> 00:04:02.265\n<v Speaker 0>is 100 g while a kilogram our target\n00:04:02.265 --> 00:04:05.720\n<v Speaker 0>unit is 1000 g now if you really\n00:04:05.720 --> 00:04:07.240\n<v Speaker 0>need the answer you can find it in\n00:04:07.240 --> 00:04:09.720\n<v Speaker 0>the course answers page but for the sake\n00:04:09.720 --> 00:04:11.640\n<v Speaker 0>of your learning progress would urge you not\n00:04:11.640 --> 00:04:13.320\n<v Speaker 0>to look at that answer until you've at\n00:04:13.320 --> 00:04:15.800\n<v Speaker 0>least followed the 15 minute rule which I\n00:04:15.800 --> 00:04:18.279\n<v Speaker 0>have linked in this lesson the best piece\n00:04:18.279 --> 00:04:19.480\n<v Speaker 0>of advice I can give you for both\n00:04:19.480 --> 00:04:22.345\n<v Speaker 0>completing this course and learning anything is to\n00:04:22.345 --> 00:04:25.545\n<v Speaker 0>embrace the learning curve view yourself as the\n00:04:25.545 --> 00:04:28.185\n<v Speaker 0>kind of person who runs headfirst and bursts\n00:04:28.185 --> 00:04:30.345\n<v Speaker 0>through the brick wall when it confronts you\n00:04:30.585 --> 00:04:32.825\n<v Speaker 0>breaking down the formula as I mentioned earlier\n00:04:32.990 --> 00:04:35.710\n<v Speaker 0>you just used 6 different formula principles while\n00:04:35.710 --> 00:04:38.910\n<v Speaker 0>creating these 2 formulas these principles among others\n00:04:38.910 --> 00:04:41.630\n<v Speaker 0>will be crucial to your foundational understanding of\n00:04:41.630 --> 00:04:44.270\n<v Speaker 0>notion formulas and fun fact they will also\n00:04:44.270 --> 00:04:46.190\n<v Speaker 0>help you learn to code better if you\n00:04:46.190 --> 00:04:48.104\n<v Speaker 0>choose to do that some down the road\n00:04:48.104 --> 00:04:50.745\n<v Speaker 0>they certainly helped me understand javascript a lot\n00:04:50.745 --> 00:04:52.745\n<v Speaker 0>more quickly now let's break down our height\n00:04:52.745 --> 00:04:54.585\n<v Speaker 0>and meters formula and go through each of\n00:04:54.585 --> 00:04:57.145\n<v Speaker 0>these principles super quickly for each I'm gonna\n00:04:57.145 --> 00:04:58.985\n<v Speaker 0>link to the relevant section in my notion\n00:04:58.985 --> 00:05:01.100\n<v Speaker 0>formula reference in case you wanna dig deeper\n00:05:01.100 --> 00:05:02.460\n<v Speaker 0>you're gonna see me link to this formula\n00:05:02.460 --> 00:05:05.100\n<v Speaker 0>reference a lot throughout this course this is\n00:05:05.100 --> 00:05:07.100\n<v Speaker 0>akin to the way that any javascript course\n00:05:07.100 --> 00:05:08.780\n<v Speaker 0>worth its salt would at least tell you\n00:05:08.780 --> 00:05:11.420\n<v Speaker 0>to go look at the mdn web docs\n00:05:11.420 --> 00:05:14.105\n<v Speaker 0>they are the definitive reference for the language\n00:05:14.265 --> 00:05:16.265\n<v Speaker 0>and these links are present for thoroughness as\n00:05:16.265 --> 00:05:18.905\n<v Speaker 0>I am a detail oriented nerd but if\n00:05:18.905 --> 00:05:20.985\n<v Speaker 0>you are intimidated by them feel free to\n00:05:20.985 --> 00:05:22.665\n<v Speaker 0>skip them for now we are gonna cover\n00:05:22.665 --> 00:05:25.145\n<v Speaker 0>everything important throughout this course and we're gonna\n00:05:25.145 --> 00:05:27.460\n<v Speaker 0>do it in an action oriented manner now\n00:05:27.460 --> 00:05:29.620\n<v Speaker 0>first here's a plain english summary of what\n00:05:29.620 --> 00:05:32.500\n<v Speaker 0>this formula is actually doing first this formula\n00:05:32.500 --> 00:05:34.419\n<v Speaker 0>is gonna get the value of the height\n00:05:34.419 --> 00:05:36.580\n<v Speaker 0>property now height is a number type property\n00:05:36.580 --> 00:05:39.220\n<v Speaker 0>and in articuno's case the value is 17\n00:05:39.540 --> 00:05:42.075\n<v Speaker 0>it then divides this value by 10 returning\n00:05:42.075 --> 00:05:44.875\n<v Speaker 0>a numeric value of 1.7 and I'll note\n00:05:44.875 --> 00:05:47.355\n<v Speaker 0>that 10 is a hard coded value in\n00:05:47.355 --> 00:05:49.115\n<v Speaker 0>the formula so it will always be 10\n00:05:49.115 --> 00:05:52.555\n<v Speaker 0>across all rows in the database by contrast\n00:05:52.555 --> 00:05:55.195\n<v Speaker 0>our prop height function will be whatever the\n00:05:55.195 --> 00:05:57.970\n<v Speaker 0>height value of each row is the format\n00:05:57.970 --> 00:06:00.930\n<v Speaker 0>function then converts this numeric value into a\n00:06:00.930 --> 00:06:03.569\n<v Speaker 0>string value and strings are essentially just pieces\n00:06:03.569 --> 00:06:06.530\n<v Speaker 0>of text finally the + or addition operator\n00:06:06.530 --> 00:06:09.810\n<v Speaker 0>is used to concatenate I e combine the\n00:06:09.810 --> 00:06:13.569\n<v Speaker 0>string value with another string in this case\n00:06:12.645 --> 00:06:14.965\n<v Speaker 0>space and then m and the final return\n00:06:14.965 --> 00:06:18.164\n<v Speaker 0>value of this entire formula is 1.7 ms\n00:06:18.164 --> 00:06:20.405\n<v Speaker 0>or meters now let's see how each of\n00:06:20.405 --> 00:06:22.405\n<v Speaker 0>the 6 formula pieces I mentioned above come\n00:06:22.405 --> 00:06:25.444\n<v Speaker 0>into play here first the format function this\n00:06:25.444 --> 00:06:27.340\n<v Speaker 0>is a function that accepts data of any\n00:06:27.340 --> 00:06:29.740\n<v Speaker 0>type as its argument and converts that data\n00:06:29.740 --> 00:06:33.020\n<v Speaker 0>to a string type conversion notion formulas can\n00:06:33.020 --> 00:06:36.300\n<v Speaker 0>work with strings numbers dates and boolean values\n00:06:36.300 --> 00:06:38.860\n<v Speaker 0>or true or false values however they can\n00:06:38.860 --> 00:06:41.354\n<v Speaker 0>only return data of a single type therefore\n00:06:41.354 --> 00:06:43.595\n<v Speaker 0>you often have to convert data types when\n00:06:43.595 --> 00:06:47.115\n<v Speaker 0>writing your formulas property reference using the prop\n00:06:47.115 --> 00:06:48.715\n<v Speaker 0>function we can bring in the value of\n00:06:48.715 --> 00:06:51.919\n<v Speaker 0>any other property in the same database division\n00:06:51.919 --> 00:06:54.400\n<v Speaker 0>operator this just divides a number by another\n00:06:54.400 --> 00:06:57.280\n<v Speaker 0>number you can also use the divide function\n00:06:57.280 --> 00:06:59.360\n<v Speaker 0>but the / character is just so much\n00:06:59.360 --> 00:07:02.720\n<v Speaker 0>more convenient hard coded number hard coded is\n00:07:02.720 --> 00:07:04.720\n<v Speaker 0>my term for data that you write directly\n00:07:04.720 --> 00:07:07.199\n<v Speaker 0>into a formula the opposite of hard coded\n00:07:06.965 --> 00:07:10.645\n<v Speaker 0>data would be a property reference string concatenation\n00:07:11.205 --> 00:07:13.845\n<v Speaker 0>this basically means combining 2 strings together for\n00:07:13.845 --> 00:07:16.885\n<v Speaker 0>example monkey d as 1 string and loofy\n00:07:16.885 --> 00:07:19.525\n<v Speaker 0>as another string would return monkey d loofy\n00:07:19.525 --> 00:07:21.800\n<v Speaker 0>if you concatenated them together now you can\n00:07:21.800 --> 00:07:23.720\n<v Speaker 0>also use the concat function for this but\n00:07:23.720 --> 00:07:25.800\n<v Speaker 0>again the + operator is just so much\n00:07:25.800 --> 00:07:27.560\n<v Speaker 0>more easy to use and it's much more\n00:07:27.560 --> 00:07:30.360\n<v Speaker 0>flexible as well alright let's move on don't\n00:07:30.360 --> 00:07:31.479\n<v Speaker 0>worry if some of what we covered here\n00:07:31.479 --> 00:07:35.479\n<v Speaker 0>feels confusing the entire. Of this lesson is\n00:07:34.155 --> 00:07:36.315\n<v Speaker 0>to number 1 give you a quick win\n00:07:36.315 --> 00:07:38.235\n<v Speaker 0>in order to motivate you to push forward\n00:07:38.235 --> 00:07:40.795\n<v Speaker 0>but number 2 give you some early exposure\n00:07:40.795 --> 00:07:43.115\n<v Speaker 0>to several concepts that will be important later\n00:07:43.115 --> 00:07:45.275\n<v Speaker 0>on remember those video games that give your\n00:07:45.275 --> 00:07:47.915\n<v Speaker 0>character like all their abilities and weapons and\n00:07:47.915 --> 00:07:49.909\n<v Speaker 0>gear in the first level only to then\n00:07:49.909 --> 00:07:51.189\n<v Speaker 0>take it all away before you go on\n00:07:51.189 --> 00:07:53.030\n<v Speaker 0>to the next 1 this is a classic\n00:07:53.030 --> 00:07:54.469\n<v Speaker 0>trick in game design it gives you a\n00:07:54.469 --> 00:07:56.229\n<v Speaker 0>taste of what's to come and it also\n00:07:56.229 --> 00:07:58.949\n<v Speaker 0>makes each new ability and upgrade feel somewhat\n00:07:58.949 --> 00:08:01.038\n<v Speaker 0>familiar when you finally unlock it later in\n00:08:01.038 --> 00:08:03.038\n<v Speaker 0>the game and that small amount of familiarity\n00:08:03.038 --> 00:08:05.438\n<v Speaker 0>can help you to build mastery much faster\n00:08:05.518 --> 00:08:07.758\n<v Speaker 0>so now that we've finished this initial challenge\n00:08:07.758 --> 00:08:09.678\n<v Speaker 0>let's move on to the proper course introduction",
        "performance_metrics": {
            "setup": 1.152738,
            "download": 28.495509,
            "transcription": 5417.657312,
            "transcriptCombination": 1.60596,
            "translation": 0,
            "summary": 0,
            "total": 5448.911519
        },
        "performance_formatted": {
            "setup": "1.15ms",
            "download": "28.50ms",
            "transcription": "5.42 seconds",
            "transcriptCombination": "1.61ms",
            "translation": "0.00ms",
            "summary": "0.00ms",
            "total": "5.45 seconds"
        }
    }
}